<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于 axios 的二次封装</title>
    <url>/2021/03/03/%E5%9F%BA%E4%BA%8E-axios-%E7%9A%84%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 axios 的二次封装，方便程序员开发</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>取消重复请求，可关闭</li>
<li>请求数据缓存，可关闭</li>
<li>因网络波动导致的请求失败而自动发请求，可关闭</li>
<li>封装调用方式统一的 <code>REQUEST/GET/POST/PUT/DELETE/FORMDATA</code> 方法，其中 <code>REQUEST</code> 为通用方法，其他都是调用 <code>REQUEST</code></li>
<li>可自定义状态码以及对应的方法</li>
<li>提供请求前和响应后的处理方法 <code>beforeRequestHook, afterResponseHook</code>，其中 <code>afterResponseHook</code> 的第二个参数是区分响应成功和失败的</li>
<li><code>getStatusFormResult, getMassageFormResult, getDataFormResult</code> 获取 <code>response.data</code> 内的状态码、信息以及数据的，需要开发人员进行修改，默认：状态码：status，信息：msg，数据：data</li>
<li>loading相关的操作 <code>stratLoading, endLoading</code> ，其中 <code>endLoading</code> 操作是在请求数为 0 时才会调用</li>
<li><code>validateStatus</code> 用于校验接口状态是否成功的，可根据相关状态码进行自定义判断规则</li>
</ul>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">目录结构：</span><br><span class="line">|<span class="built_in">--easy-axios</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--cache</span>                    <span class="comment"># 缓存相关</span></span><br><span class="line">		|<span class="built_in">--ItemCache.js</span></span><br><span class="line"><span class="built_in"></span>		|<span class="built_in">--OperationCache.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--constant</span>                 <span class="comment"># 常量文件夹</span></span><br><span class="line">		|<span class="built_in">--statusMsg.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--utils</span>                    <span class="comment"># 工具文件夹</span></span><br><span class="line">		|<span class="built_in">--utils.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--validator</span>                <span class="comment"># EasyAxios 参数验证器相关</span></span><br><span class="line">		|<span class="built_in">--claim.js</span>             </span><br><span class="line">		|<span class="built_in">--validator.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--api.js</span>                   <span class="comment"># 通用 api 接口管理文件</span></span><br><span class="line">	|<span class="built_in">--easy-axios.js</span>            <span class="comment"># 核心文件</span></span><br><span class="line">	|<span class="built_in">--easyAxiosInstance.js</span>     <span class="comment"># EasyAxios 实例配置文件</span></span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>只需要修改 <code>easyAxiosInstance.js</code> 和 <code>api.js</code> 文件就可以了，其他文件不建议修改 </p>
<h3 id="修改相关配置"><a href="#修改相关配置" class="headerlink" title="修改相关配置"></a>修改相关配置</h3><p>在 <code>easyAxiosInstance.js</code> 文件内</p>
<h4 id="添加-axios-的配置"><a href="#添加-axios-的配置" class="headerlink" title="添加 axios 的配置"></a>添加 axios 的配置</h4><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// axios 的配置</span></span><br><span class="line"><span class="keyword">const</span> axiosConfig = &#123;</span><br><span class="line">    baseURL: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">    timeout: <span class="number">10000</span>,</span><br><span class="line">    responseType: <span class="string">&#x27;json&#x27;</span>, </span><br><span class="line">    headers: &#123; </span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=utf-8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="自定义-EasyAxios-全局配置信息"><a href="#自定义-EasyAxios-全局配置信息" class="headerlink" title="自定义 EasyAxios 全局配置信息"></a>自定义 EasyAxios 全局配置信息</h4><p>将 <code>easy-axios</code> 文件夹下载放置你的项目中，之后自定义配置信息</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// EasyAxios 全局配置信息</span></span><br><span class="line">easyAxiosConfig: &#123;</span><br><span class="line">    <span class="comment">// 是否开启提示</span></span><br><span class="line">    isOpenTips: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否开启取消重复请求</span></span><br><span class="line">    isOpenCancelDuplicateRequest: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否开启请求缓存</span></span><br><span class="line">    isOpenRequestCache: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存时间，单位毫秒</span></span><br><span class="line">    cacheEffectiveTime: <span class="number">20</span> * <span class="number">60</span> * <span class="number">1000</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 网络超时连接失败后重连次数</span></span><br><span class="line">    maxReconnectionTimes: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 错误码（tttp的或者自定义的）和对应方法</span></span><br><span class="line">    statusHandlers: &#123;</span><br><span class="line">        <span class="string">&#x27;401&#x27;</span>: <span class="function">(<span class="params">...param</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">        <span class="string">&#x27;403&#x27;</span>: <span class="function">(<span class="params">...param</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="自定义-EasyAxios-相关操作"><a href="#自定义-EasyAxios-相关操作" class="headerlink" title="自定义 EasyAxios 相关操作"></a>自定义 EasyAxios 相关操作</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 请求前的处理</span><br><span class="line">beforeRequestHook: <span class="function"><span class="params">(config)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="regexp">//</span> 处理数据，或者添加token</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;请求前的处理&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 响应后的处理</span><br><span class="line">afterResponseHook: <span class="function"><span class="params">(result, isError)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="regexp">//</span> isError 为 <span class="literal">true</span> 则响应失败，反之成功</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isError) <span class="built_in">console</span>.log(<span class="string">&#x27;响应失败后的处理&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">console</span>.log(<span class="string">&#x27;响应成功后的处理&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 提示信息的处理</span><br><span class="line">tipsFunction: <span class="function"><span class="params">(message)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="regexp">//</span> 可以添加提示框</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;提示信息的处理&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 添加加载动画</span><br><span class="line">stratLoading: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;loading...&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 去掉加载动画</span><br><span class="line">endLoading: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;End of loading.&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 获取服务端返回状态码，默认属性名 status</span><br><span class="line">getStatusFormResult: <span class="function"><span class="params">(data)</span> =&gt;</span> data.status,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 获取服务端返回信息，默认属性名 msg</span><br><span class="line">getMassageFormResult: <span class="function"><span class="params">(data)</span> =&gt;</span> data.msg,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 获取服务端返回数据，默认属性名 data</span><br><span class="line">getDataFormResult: <span class="function"><span class="params">(data)</span> =&gt;</span> data.data,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 验证器，验证请求是否成功</span><br><span class="line">validateResultStatus: <span class="function"><span class="params">(status)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> status === <span class="number">0</span> || (status &gt;= <span class="number">200</span> &amp;&amp; status &lt; <span class="number">300</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="封装常用接口"><a href="#封装常用接口" class="headerlink" title="封装常用接口"></a>封装常用接口</h3><p>在 <code>api.js</code> 文件内引入<code>easyAxiosInstance.js</code> ，然后调用实例 <code>easyAxiosInstance</code> 的相关方法封装常用接口<br>例如： </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 管理员相关接口</span></span><br><span class="line"><span class="keyword">const</span> login     = <span class="function">(<span class="params">param</span>) =&gt;</span> easyAxiosInstance.POST(<span class="string">&#x27;/login&#x27;</span>, param)</span><br><span class="line"><span class="keyword">const</span> adminList = <span class="function">(<span class="params">param</span>) =&gt;</span> easyAxiosInstance.GET(<span class="string">&#x27;/admin&#x27;</span>, param)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; </span><br><span class="line">    login,</span><br><span class="line">    adminList,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可调用方法： </p>
<ul>
<li><code>easyAxiosInstance.REQUEST(method, url, param, config)</code></li>
<li><code>easyAxiosInstance.GET(url, param, config)</code></li>
<li><code>easyAxiosInstance.POST(url, param, config)</code></li>
<li><code>easyAxiosInstance.PUT(url, param, config)</code></li>
<li><code>easyAxiosInstance.DELETE(url, param, config)</code></li>
<li><code>easyAxiosInstance.FORMDATA(url, param, config)</code></li>
</ul>
<p><code>method</code> 为请求类型</p>
<p><code>url</code> 为请求路径</p>
<p><code>param</code> 为请求携带参数</p>
<p><code>config</code> 为单独接口的配置对象，可以对某个接口设置 <code>headers</code> ， <code>timeout</code> ， <code>baseURL</code> 等</p>
<p><code>config</code> 的 <code>easyAxiosConfig</code> 属性可以对某个接口设置 <code>disableHooks</code> ， <code>disableTips</code> ， <code>disableCache</code> ，<code>disableCancelDuplicate</code> ， <code>requestKey</code></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 禁用全部 hooks</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableHooks</span>: <span class="params">true</span> &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用相关 hooks</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableHooks</span>: &#123; <span class="params">request</span>: <span class="params">true</span> &#125; &#125; &#125;)</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableHooks</span>: &#123; <span class="params">response</span>: <span class="params">true</span> &#125; &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用缓存</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableCache</span>: <span class="params">true</span> &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用取消重复请求</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableCancelDuplicate</span>: <span class="params">true</span> &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 为某个请求设置 key 标识，用于查找该请求是否正在发送</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">requestKey</span>: &#x27;<span class="params">string</span>&#x27; &#125; &#125;)</span></span><br></pre></td></tr></table></figure>

<p>清除所有 PendingRequest</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 路由切换时可以取消之前所有正在发送的请求，在路由跳转前调用</span><br><span class="line">easyAxiosInstance.clearPendingRequest()</span><br></pre></td></tr></table></figure>

<p>传送门：<a href="https://github.com/zhongdingshou/easy-axios">github 地址</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>axios</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown常用语法整理</title>
    <url>/2019/07/30/MarkDown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="一、Markdown-标题"><a href="#一、Markdown-标题" class="headerlink" title="一、Markdown 标题"></a>一、Markdown 标题</h1><h2 id="1-使用-和-标记一级和二级标题"><a href="#1-使用-和-标记一级和二级标题" class="headerlink" title="1.使用 = 和 - 标记一级和二级标题"></a>1.使用 = 和 - 标记一级和二级标题</h2><h3 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">--------</span><br></pre></td></tr></table></figure>
<h3 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h3><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h2 id="2-使用-号标记"><a href="#2-使用-号标记" class="headerlink" title="2.使用 # 号标记"></a>2.使用 <code>#</code> 号标记</h2><p>使用 <code>#</code> 号可表示 1-6 级标题，一级标题对应一个 <code>#</code> 号，二级标题对应两个 <code>#</code> 号，以此类推。  </p>
<h3 id="例如：-1"><a href="#例如：-1" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<h3 id="效果：-1"><a href="#效果：-1" class="headerlink" title="效果："></a>效果：</h3><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr>
<h1 id="二、Markdown-段落"><a href="#二、Markdown-段落" class="headerlink" title="二、Markdown 段落"></a>二、Markdown 段落</h1><h2 id="1-换行"><a href="#1-换行" class="headerlink" title="1.换行"></a>1.换行</h2><p>由于编辑器的不同,在换行的处理上有细微差异<br>1.末尾添加两个空格换行<br>2.回车空行来换行<br>3.使用HTML中的<code>&lt;br&gt;</code>标签强制换行  </p>
<h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><h3 id="例如-："><a href="#例如-：" class="headerlink" title="例如 ："></a>例如 ：</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">*斜体文本*</span>  </span><br><span class="line"></span><br><span class="line"><span class="emphasis">_斜体文本_</span>  </span><br><span class="line"></span><br><span class="line"><span class="strong">**粗体文本**</span>  </span><br><span class="line"></span><br><span class="line"><span class="emphasis">__粗体文本__</span>  </span><br><span class="line"></span><br><span class="line"><span class="strong">***粗斜体文本**</span>*  </span><br><span class="line"></span><br><span class="line"><span class="emphasis">___粗斜体文本__</span>_  </span><br><span class="line"></span><br><span class="line">~~我是删除线~~  </span><br></pre></td></tr></table></figure>

<h3 id="效果：-2"><a href="#效果：-2" class="headerlink" title="效果："></a>效果：</h3><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong><br><del>我是删除线</del>  </p>
<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><h4 id="下划线可以通过-HTML-的-lt-u-gt-标签来实现："><a href="#下划线可以通过-HTML-的-lt-u-gt-标签来实现：" class="headerlink" title="下划线可以通过 HTML 的 &lt;u&gt; 标签来实现："></a>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</h4><p><code>&lt;u&gt;带下划线文本&lt;/u&gt;</code></p>
<h3 id="效果：-3"><a href="#效果：-3" class="headerlink" title="效果："></a>效果：</h3><p><u>带下划线文本</u></p>
<h2 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3.分割线"></a>3.分割线</h2><h3 id="例如：-2"><a href="#例如：-2" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">*</span> <span class="emphasis">* *</span></span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">- - -</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">----------</span></span></span><br></pre></td></tr></table></figure>
<h3 id="效果：-4"><a href="#效果：-4" class="headerlink" title="效果："></a>效果：</h3><hr>
<hr>
<hr>
<hr>
<hr>
<h2 id="4-脚注"><a href="#4-脚注" class="headerlink" title="4.脚注"></a>4.脚注</h2><p>脚注是对文本的补充说明。<br>Markdown 脚注的格式如下:<br><code>[^要注明的文本]</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">创建脚注格式类似这样 [^RUNOOB]。</span><br><span class="line">[<span class="symbol">^RUNOOB</span>]: <span class="link">我是脚注</span></span><br></pre></td></tr></table></figure>

<h3 id="效果：-5"><a href="#效果：-5" class="headerlink" title="效果："></a>效果：</h3><p>创建脚注格式类似这样 <a href="/#">^脚注</a>。  </p>
<h2 id="5-空格缩进"><a href="#5-空格缩进" class="headerlink" title="5.空格缩进"></a>5.空格缩进</h2><h3 id="例如：-3"><a href="#例如：-3" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">没有空格</span><br><span class="line"><span class="meta">&amp;ensp; 一个空格</span></span><br><span class="line"><span class="meta">&amp;emsp; 两个空格</span></span><br><span class="line"><span class="meta">&amp;nbsp; 一个空格不会触发换行</span></span><br></pre></td></tr></table></figure>

<h3 id="效果：-6"><a href="#效果：-6" class="headerlink" title="效果："></a>效果：</h3><p>没有空格<br>&ensp; 一个空格<br>&emsp; 两个空格<br>&nbsp; 一个空格不会触发换行  </p>
<hr>
<h1 id="三、Markdown-列表"><a href="#三、Markdown-列表" class="headerlink" title="三、Markdown 列表"></a>三、Markdown 列表</h1><h2 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h2><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记.   </p>
<h3 id="例如：-4"><a href="#例如：-4" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure>

<h3 id="效果：-7"><a href="#效果：-7" class="headerlink" title="效果："></a>效果：</h3><ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h2><p>有序列表使用数字并加上 . 号来表示  </p>
<h3 id="例如：-5"><a href="#例如：-5" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1</span>. 文本<span class="number">1</span></span><br><span class="line"><span class="attribute">2</span>. 文本<span class="number">2</span></span><br><span class="line"><span class="attribute">3</span>. 文本<span class="number">3</span></span><br></pre></td></tr></table></figure>

<h3 id="效果：-8"><a href="#效果：-8" class="headerlink" title="效果："></a>效果：</h3><ol>
<li>文本1</li>
<li>文本2</li>
<li>文本3</li>
</ol>
<h2 id="3-列表嵌套"><a href="#3-列表嵌套" class="headerlink" title="3.列表嵌套"></a>3.列表嵌套</h2><h3 id="例如：-6"><a href="#例如：-6" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br></pre></td></tr></table></figure>

<h3 id="效果：-9"><a href="#效果：-9" class="headerlink" title="效果："></a>效果：</h3><ol>
<li>第一项：<ul>
<li>第一项嵌套的第一个元素</li>
<li>第一项嵌套的第二个元素</li>
</ul>
</li>
<li>第二项：<ul>
<li>第二项嵌套的第一个元素</li>
<li>第二项嵌套的第一个元素</li>
</ul>
</li>
</ol>
<hr>
<h1 id="四、Markdown-区块"><a href="#四、Markdown-区块" class="headerlink" title="四、Markdown 区块"></a>四、Markdown 区块</h1><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号  </p>
<h2 id="1-一级区块"><a href="#1-一级区块" class="headerlink" title="1.一级区块"></a>1.一级区块</h2><h3 id="例如：-7"><a href="#例如：-7" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 区块引用</span><br><span class="line">&gt; 区块引用</span><br><span class="line">&gt; 区块引用</span><br></pre></td></tr></table></figure>

<h3 id="效果：-10"><a href="#效果：-10" class="headerlink" title="效果："></a>效果：</h3><blockquote>
<p>区块引用<br>区块引用<br>区块引用  </p>
</blockquote>
<h2 id="2-区块嵌套"><a href="#2-区块嵌套" class="headerlink" title="2.区块嵌套"></a>2.区块嵌套</h2><p>另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure>

<h3 id="效果：-11"><a href="#效果：-11" class="headerlink" title="效果："></a>效果：</h3><blockquote>
<p>最外层</p>
<blockquote>
<p>第一层嵌套</p>
<blockquote>
<p>第二层嵌套</p>
</blockquote>
</blockquote>
</blockquote>
<hr>
<h1 id="五、Markdown-代码"><a href="#五、Markdown-代码" class="headerlink" title="五、Markdown 代码"></a>五、Markdown 代码</h1><p>单行代码使用` …`包裹<br>多行代码使用```…```包裹  </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;RUNOOB&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="六、Markdown-链接"><a href="#六、Markdown-链接" class="headerlink" title="六、Markdown 链接"></a>六、Markdown 链接</h1><h2 id="1-链接使用方法如下："><a href="#1-链接使用方法如下：" class="headerlink" title="1.链接使用方法如下："></a>1.链接使用方法如下：</h2><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[链接名称]</span>(链接地址)</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[链接名称]</span>(链接地址 &quot;超链接title&quot;)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure>

<h3 id="例如：-8"><a href="#例如：-8" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line">这是一个链接 <span class="selector-attr">[百度]</span>(<span class="attribute">https</span>:<span class="comment">//www.baidu.com)</span></span><br></pre></td></tr></table></figure>

<h3 id="效果：-12"><a href="#效果：-12" class="headerlink" title="效果："></a>效果：</h3><p>这是一个链接 <a href="https://www.baidu.com">百度</a></p>
<h3 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;https:<span class="regexp">//</span>www.baidu.com&gt;</span><br></pre></td></tr></table></figure>

<h3 id="效果：-13"><a href="#效果：-13" class="headerlink" title="效果："></a>效果：</h3><p><a href="https://www.baidu.com">https://www.baidu.com</a></p>
<h2 id="2-高级链接"><a href="#2-高级链接" class="headerlink" title="2.高级链接"></a>2.高级链接</h2><h3 id="例如：-9"><a href="#例如：-9" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line">链接也可以用变量来代替，文档末尾附带变量地址：</span><br><span class="line">这个链接用 <span class="selector-tag">1</span> 作为网址变量 <span class="selector-attr">[Google]</span><span class="selector-attr">[1]</span></span><br><span class="line">这个链接用 <span class="selector-tag">link</span> 作为网址变量 <span class="selector-attr">[百度]</span><span class="selector-attr">[link]</span></span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  <span class="selector-attr">[1]</span>: <span class="selector-tag">http</span>:<span class="comment">//www.google.com/</span></span><br><span class="line">  <span class="selector-attr">[link]</span>: <span class="selector-tag">http</span>:<span class="comment">//www.baidu.com/</span></span><br></pre></td></tr></table></figure>

<h3 id="效果：-14"><a href="#效果：-14" class="headerlink" title="效果："></a>效果：</h3><p>链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a><br>这个链接用 link 作为网址变量 <a href="http://www.baidu.com/">百度</a><br>然后在文档的结尾为变量赋值（网址） </p>
<hr>
<h1 id="七、Markdown-图片"><a href="#七、Markdown-图片" class="headerlink" title="七、Markdown 图片"></a>七、Markdown 图片</h1><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[alt 属性文本]</span>(图片地址)</span><br><span class="line"></span><br><span class="line">!<span class="selector-attr">[alt 属性文本]</span>(图片地址 <span class="string">&quot;可选标题&quot;</span>)</span><br><span class="line"></span><br><span class="line">图片<span class="selector-tag">alt</span>就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片<span class="selector-tag">title</span>是图片的标题，当鼠标移到图片上时显示的内容。<span class="selector-tag">title</span>可加可不加</span><br></pre></td></tr></table></figure>

<h3 id="例如：-10"><a href="#例如：-10" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">![哔哩哔哩](https:<span class="regexp">//</span>ss1.baidu.com<span class="regexp">/6ONXsjip0QIZ8tyhnq/i</span>t/u=<span class="number">2810627290</span>,<span class="number">1080409091</span>&amp;fm=<span class="number">58</span>&amp;s=<span class="number">8197</span>C732C535FA313E526557030030BB&amp;bpow=<span class="number">121</span>&amp;bpoh=<span class="number">75</span> <span class="string">&quot;bilibili&quot;</span>)</span><br><span class="line"></span><br><span class="line">![blockchain](https:<span class="regexp">//</span>ss0.bdstatic.com<span class="regexp">/70cFvHSh_Q1YnxGkpoWK1HF6hhy/i</span>t/u=<span class="number">702257389</span>,<span class="number">1274025419</span>&amp;fm=<span class="number">27</span>&amp;gp=<span class="number">0</span>.jpg <span class="string">&quot;区块链&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="效果：-15"><a href="#效果：-15" class="headerlink" title="效果："></a>效果：</h3><p><img src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=2810627290,1080409091&fm=58&s=8197C732C535FA313E526557030030BB&bpow=121&bpoh=75" alt="哔哩哔哩" title="bilibili"></p>
<p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg" alt="blockchain" title="区块链"></p>
<p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p>
<hr>
<h2 id="八、Markdown-表格"><a href="#八、Markdown-表格" class="headerlink" title="八、Markdown 表格"></a>八、Markdown 表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。  </p>
<h3 id="例如：-11"><a href="#例如：-11" class="headerlink" title="例如："></a>例如：</h3><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">表头</span>|<span class="string">表头</span>|<span class="string">表头</span>|</span><br><span class="line">|<span class="string">-</span>|<span class="string">:-:</span>|<span class="string">-:</span>|</span><br><span class="line">|<span class="string">内容</span>|<span class="string">内容</span>|<span class="string">内容</span>|</span><br><span class="line">|<span class="string">内容</span>|<span class="string">内容</span>|<span class="string">内容</span>|</span><br></pre></td></tr></table></figure>

<h3 id="效果：-16"><a href="#效果：-16" class="headerlink" title="效果："></a>效果：</h3><table>
<thead>
<tr>
<th>表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
<tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
</tbody></table>
<hr>
<h2 id="九、Markdown-高级技巧"><a href="#九、Markdown-高级技巧" class="headerlink" title="九、Markdown 高级技巧"></a>九、Markdown 高级技巧</h2><h3 id="1-支持的-HTML-元素"><a href="#1-支持的-HTML-元素" class="headerlink" title="1.支持的 HTML 元素"></a>1.支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p>
<p>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p>
<h4 id="例如：-12"><a href="#例如：-12" class="headerlink" title="例如："></a>例如：</h4><p>使用<code>&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;</code>复制</p>
<h4 id="效果：-17"><a href="#效果：-17" class="headerlink" title="效果："></a>效果：</h4><p>使用<kbd>Ctrl</kbd>+<kbd>C</kbd>复制</p>
<h3 id="2-转义"><a href="#2-转义" class="headerlink" title="2.转义"></a>2.转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符。   </p>
<h4 id="例如：-13"><a href="#例如：-13" class="headerlink" title="例如："></a>例如：</h4><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">**文本加粗**</span> </span><br><span class="line">\*\* 正常显示星号 \*\*</span><br></pre></td></tr></table></figure>

<h4 id="效果：-18"><a href="#效果：-18" class="headerlink" title="效果："></a>效果：</h4><p><strong>文本加粗</strong><br>** 正常显示星号 **  </p>
<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*   </span>星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line"><span class="bullet">-   </span>减号</span><br><span class="line"><span class="bullet">.   </span>英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure>


<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<p><a href="https://www.runoob.com/markdown/md-tutorial.html">https://www.runoob.com/markdown/md-tutorial.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>语法</tag>
        <tag>水一下</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/07/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于 axios 的二次封装</title>
    <url>/2021/03/03/%E5%9F%BA%E4%BA%8E-axios-%E7%9A%84%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于 axios 的二次封装，方便程序员开发</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>取消重复请求，可关闭</li>
<li>请求数据缓存，可关闭</li>
<li>因网络波动导致的请求失败而自动发请求，可关闭</li>
<li>封装调用方式统一的 <code>REQUEST/GET/POST/PUT/DELETE/FORMDATA</code> 方法，其中 <code>REQUEST</code> 为通用方法，其他都是调用 <code>REQUEST</code></li>
<li>可自定义状态码以及对应的方法</li>
<li>提供请求前和响应后的处理方法 <code>beforeRequestHook, afterResponseHook</code>，其中 <code>afterResponseHook</code> 的第二个参数是区分响应成功和失败的</li>
<li><code>getStatusFormResult, getMassageFormResult, getDataFormResult</code> 获取 <code>response.data</code> 内的状态码、信息以及数据的，需要开发人员进行修改，默认：状态码：status，信息：msg，数据：data</li>
<li>loading相关的操作 <code>stratLoading, endLoading</code> ，其中 <code>endLoading</code> 操作是在请求数为 0 时才会调用</li>
<li><code>validateStatus</code> 用于校验接口状态是否成功的，可根据相关状态码进行自定义判断规则</li>
</ul>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">目录结构：</span><br><span class="line">|<span class="built_in">--easy-axios</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--cache</span>                    <span class="comment"># 缓存相关</span></span><br><span class="line">		|<span class="built_in">--ItemCache.js</span></span><br><span class="line"><span class="built_in"></span>		|<span class="built_in">--OperationCache.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--constant</span>                 <span class="comment"># 常量文件夹</span></span><br><span class="line">		|<span class="built_in">--statusMsg.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--utils</span>                    <span class="comment"># 工具文件夹</span></span><br><span class="line">		|<span class="built_in">--utils.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--validator</span>                <span class="comment"># EasyAxios 参数验证器相关</span></span><br><span class="line">		|<span class="built_in">--claim.js</span>             </span><br><span class="line">		|<span class="built_in">--validator.js</span></span><br><span class="line"><span class="built_in"></span>	|<span class="built_in">--api.js</span>                   <span class="comment"># 通用 api 接口管理文件</span></span><br><span class="line">	|<span class="built_in">--easy-axios.js</span>            <span class="comment"># 核心文件</span></span><br><span class="line">	|<span class="built_in">--easyAxiosInstance.js</span>     <span class="comment"># EasyAxios 实例配置文件</span></span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>只需要修改 <code>easyAxiosInstance.js</code> 和 <code>api.js</code> 文件就可以了，其他文件不建议修改 </p>
<h3 id="修改相关配置"><a href="#修改相关配置" class="headerlink" title="修改相关配置"></a>修改相关配置</h3><p>在 <code>easyAxiosInstance.js</code> 文件内</p>
<h4 id="添加-axios-的配置"><a href="#添加-axios-的配置" class="headerlink" title="添加 axios 的配置"></a>添加 axios 的配置</h4><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// axios 的配置</span></span><br><span class="line"><span class="keyword">const</span> axiosConfig = &#123;</span><br><span class="line">    baseURL: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">    timeout: <span class="number">10000</span>,</span><br><span class="line">    responseType: <span class="string">&#x27;json&#x27;</span>, </span><br><span class="line">    headers: &#123; </span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=utf-8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="自定义-EasyAxios-全局配置信息"><a href="#自定义-EasyAxios-全局配置信息" class="headerlink" title="自定义 EasyAxios 全局配置信息"></a>自定义 EasyAxios 全局配置信息</h4><p>将 <code>easy-axios</code> 文件夹下载放置你的项目中，之后自定义配置信息</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// EasyAxios 全局配置信息</span></span><br><span class="line">easyAxiosConfig: &#123;</span><br><span class="line">    <span class="comment">// 是否开启提示</span></span><br><span class="line">    isOpenTips: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否开启取消重复请求</span></span><br><span class="line">    isOpenCancelDuplicateRequest: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否开启请求缓存</span></span><br><span class="line">    isOpenRequestCache: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存时间，单位毫秒</span></span><br><span class="line">    cacheEffectiveTime: <span class="number">20</span> * <span class="number">60</span> * <span class="number">1000</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 网络超时连接失败后重连次数</span></span><br><span class="line">    maxReconnectionTimes: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 错误码（tttp的或者自定义的）和对应方法</span></span><br><span class="line">    statusHandlers: &#123;</span><br><span class="line">        <span class="string">&#x27;401&#x27;</span>: <span class="function">(<span class="params">...param</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">        <span class="string">&#x27;403&#x27;</span>: <span class="function">(<span class="params">...param</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="自定义-EasyAxios-相关操作"><a href="#自定义-EasyAxios-相关操作" class="headerlink" title="自定义 EasyAxios 相关操作"></a>自定义 EasyAxios 相关操作</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 请求前的处理</span><br><span class="line">beforeRequestHook: <span class="function"><span class="params">(config)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="regexp">//</span> 处理数据，或者添加token</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;请求前的处理&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 响应后的处理</span><br><span class="line">afterResponseHook: <span class="function"><span class="params">(result, isError)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="regexp">//</span> isError 为 <span class="literal">true</span> 则响应失败，反之成功</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isError) <span class="built_in">console</span>.log(<span class="string">&#x27;响应失败后的处理&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">console</span>.log(<span class="string">&#x27;响应成功后的处理&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 提示信息的处理</span><br><span class="line">tipsFunction: <span class="function"><span class="params">(message)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="regexp">//</span> 可以添加提示框</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;提示信息的处理&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 添加加载动画</span><br><span class="line">stratLoading: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;loading...&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 去掉加载动画</span><br><span class="line">endLoading: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;End of loading.&#x27;</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 获取服务端返回状态码，默认属性名 status</span><br><span class="line">getStatusFormResult: <span class="function"><span class="params">(data)</span> =&gt;</span> data.status,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 获取服务端返回信息，默认属性名 msg</span><br><span class="line">getMassageFormResult: <span class="function"><span class="params">(data)</span> =&gt;</span> data.msg,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 获取服务端返回数据，默认属性名 data</span><br><span class="line">getDataFormResult: <span class="function"><span class="params">(data)</span> =&gt;</span> data.data,</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 验证器，验证请求是否成功</span><br><span class="line">validateResultStatus: <span class="function"><span class="params">(status)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> status === <span class="number">0</span> || (status &gt;= <span class="number">200</span> &amp;&amp; status &lt; <span class="number">300</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="封装常用接口"><a href="#封装常用接口" class="headerlink" title="封装常用接口"></a>封装常用接口</h3><p>在 <code>api.js</code> 文件内引入<code>easyAxiosInstance.js</code> ，然后调用实例 <code>easyAxiosInstance</code> 的相关方法封装常用接口<br>例如： </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 管理员相关接口</span></span><br><span class="line"><span class="keyword">const</span> login     = <span class="function">(<span class="params">param</span>) =&gt;</span> easyAxiosInstance.POST(<span class="string">&#x27;/login&#x27;</span>, param)</span><br><span class="line"><span class="keyword">const</span> adminList = <span class="function">(<span class="params">param</span>) =&gt;</span> easyAxiosInstance.GET(<span class="string">&#x27;/admin&#x27;</span>, param)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; </span><br><span class="line">    login,</span><br><span class="line">    adminList,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可调用方法： </p>
<ul>
<li><code>easyAxiosInstance.REQUEST(method, url, param, config)</code></li>
<li><code>easyAxiosInstance.GET(url, param, config)</code></li>
<li><code>easyAxiosInstance.POST(url, param, config)</code></li>
<li><code>easyAxiosInstance.PUT(url, param, config)</code></li>
<li><code>easyAxiosInstance.DELETE(url, param, config)</code></li>
<li><code>easyAxiosInstance.FORMDATA(url, param, config)</code></li>
</ul>
<p><code>method</code> 为请求类型</p>
<p><code>url</code> 为请求路径</p>
<p><code>param</code> 为请求携带参数</p>
<p><code>config</code> 为单独接口的配置对象，可以对某个接口设置 <code>headers</code> ， <code>timeout</code> ， <code>baseURL</code> 等</p>
<p><code>config</code> 的 <code>easyAxiosConfig</code> 设置 <code>disableHooks</code> ， <code>disableTips</code> ， <code>disableCache</code> ，<code>disableCancelDuplicate</code> ， <code>requestKey</code></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 禁用全部 hooks</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableHooks</span>: <span class="params">true</span> &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用相关 hooks</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableHooks</span>: &#123; <span class="params">request</span>: <span class="params">true</span> &#125; &#125; &#125;)</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableHooks</span>: &#123; <span class="params">response</span>: <span class="params">true</span> &#125; &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用缓存</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableCache</span>: <span class="params">true</span> &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用取消重复请求</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">disableCancelDuplicate</span>: <span class="params">true</span> &#125; &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 为某个请求设置 key 标识，用于查找该请求是否正在发送</span></span><br><span class="line">easyAxiosInstance.<span class="constructor">GET(<span class="params">url</span>, <span class="params">param</span>, &#123; <span class="params">easyAxiosConfig</span>: &#123; <span class="params">requestKey</span>: &#x27;<span class="params">string</span>&#x27; &#125; &#125;)</span></span><br></pre></td></tr></table></figure>

<p>传送门：<a href="https://github.com/zhongdingshou/easy-axios">github 地址</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>axios</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/07/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
</search>
